# stdout (Standard Out)

## Lesson Content

Maintenant, nous sommes devenu familier avec beaucoup de commandes et leur résultat.
Cela nous amènes au prochain sujet le flux d'entrée/sortie (input/output). Commençons par lancer quelques commandes et nous 
verrons comment cela fonctionne.

<pre>$ echo Hello World > peanuts.txt</pre>

Que se passe-t-il ? Regarder le dossier où vous avez lancé la commande et dedans vous devriez voir un fichier nommé peanuts.txt;
regarder à l'intérieur de ce fichier et vous verrez écrit le texte "Hello World". Beaucoup de chose vienne de se passer en une commande.

Premièrement, analysons la première partie:

<pre>$ echo Hello World</pre>

Nous savons que cela imprime "Hello World" to the screen, mais comment ?Les processus utilisent les flux d'entrées et de sorties
pour recevoir des informations. Par défaut, la commande echo prend une entrée (entrée standard ou standard input/stdin en anglais)
depuis le clavier et le retourne en une sortie (sortie standard ou standard output/stdout en anglais) à l'écran. C'est grâce à tout cela
que quand vous écrivez "Hello World" dans la console, cela s'affiche sur votre écran. Cependant, les redirections des flux entrée/sortie
nous permet de changer la redirection afin d'apporter une fléxibilité au niveau des fichiers.

Analysons maintenant la deuxième partie:

<pre> > </pre>

Le caractère > est une redirection qui permet de changer le lieu de la sortie standard. Cela nous permet d'envoyer la sortie
Hello World directement dans un fichier au lieu de l'écran. Si le fichier n'existe pas, la commande le crée pour nous.
Mais si il existe déjà, cela va écrire par dessus (vous pouvez ajouter un drapeau afin d'éviter ça selon le shell que vous utilisez).

Et voila comment fonctionne la redirection standard de sortie !

Disons que je ne veux pas écrire par dessus mon fichier texte peanuts.txt, heureusement il y a un opérateur de redirection qui 
permet cela, >>:

<pre>$ echo Hello World >> peanuts.txt</pre>

Cela va ajouter Hello World à la fin de votre fichier texte et si le fichier n'existe pas, cela va quand même le créer, 
comme l'opérateur > !

## Exercise

Essayez quelques commandes: 

<pre>
$ ls -l /var/log > myoutput.txt
$ echo Hello World > rm
$ > somefile.txt 
</pre>

## Quiz Question

Quel opérateur de redirection utilisez vous pour ajouter une sortie à un fichier ?

## Quiz Answer

>>
